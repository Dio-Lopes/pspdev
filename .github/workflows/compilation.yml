name: CI

on:
  push:
  pull_request:
  repository_dispatch:
    types: [run_build]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
      fail-fast: false

    steps:
    - uses: actions/checkout@v2

    - name: Install on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get -y install autoconf automake bison bzip2 cmake doxygen \
                                flex gettext g++ gcc git gzip libarchive-dev \
                                libcurl4-openssl-dev libelf-dev libgpgme-dev \
                                libncurses5-dev libreadline-dev libsdl1.2-dev \
                                libssl-dev libtool-bin libusb-dev m4 make patch \
                                pkg-config python3 python3-venv subversion tar \
                                tcl texinfo unzip wget xz-utils

    - name: Install on Mac
      if: matrix.os == 'macOS-latest'
      run: |
        brew update
        brew install autoconf automake bash coreutils cmake curl doxygen gettext \
                     gnu-sed gpgme intltool libarchive libelf libtool libusb \
                     libusb-compat meson ninja openssl pkg-config sdl wget xz

    - name: Runs all stages
      run: |
        export PSPDEV=$PWD/pspdev
        export PATH=$PATH:$PSPDEV/bin
        ./pspdev.sh

    - name: Get short SHA
      id: slug
      run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"

    - name: Compress pspdev folder
      run: |
        tar -zcvf pspdev.tar.gz pspdev

    - uses: actions/upload-artifact@v2
      with:
        name: pspdev-${{ steps.slug.outputs.sha8 }}-${{matrix.os}}
        path: pspdev.tar.gz

    - name: Rename pspdev.tar.gz file
      run: |
        mv pspdev.tar.gz pspdev-${{matrix.os}}.tar.gz

    - name: Extract tag name
      if: startsWith(github.ref, 'refs/tags/')
      id: tag
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: pspdev-${{matrix.os}}.tar.gz
        tag_name: ${{ steps.tag.outputs.VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
